<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring的学习</title>
      <link href="/2024/03/13/Spring/Spring%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/03/13/Spring/Spring%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>​</p><p>​由于之前我使用的是csdn书写的博客,所以有一部分的笔记书写在了上面</p><p><img src="http://t.csdnimg.cn/cC1gd" alt="文章地址"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;软件测试&#39;</title>
      <link href="/2024/03/01/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/03/01/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>​</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text</span><br></pre></td></tr></table></figure><p><img src="/./../../img/%E6%B5%B7.jpg" alt="海"></p>]]></content>
      
      
      
        <tags>
            
            <tag> -软测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&#39;vue的基本概念和语法&#39;</title>
      <link href="/2024/02/19/vue/vue%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%92%8C%E8%AF%AD%E6%B3%95/"/>
      <url>/2024/02/19/vue/vue%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E5%92%8C%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1. 概述"></a>1. 概述</h1><p>Vue是一款流行的JavaScript框架，旨在构建交互式的现代Web应用程序。它采用MVVM模式，将视图层和数据模型分离，通过响应式数据绑定实现数据和视图的同步更新。Sue具有简洁、灵活的语法，支持指令、计算属性、事件处理、组件化开发等特性，使前端开发更加高效和可维护。Vue还提供了虚拟DOM技术，通过最小化DOM操作来提高性能。其生态系统丰富，包括Vue Router用于构建单页面应用、Vuex用于状态管理等工具。</p><h2 id="1-1-Soc关注点分离原则："><a href="#1-1-Soc关注点分离原则：" class="headerlink" title="1.1 Soc关注点分离原则："></a>1.1 Soc关注点分离原则：</h2><p><strong>SOC（Separation of Concerns）</strong>关注度分离原则是指将代码分为不同的关注领域，每个领域专注于特定的任务。在Vue中，这通常体现在将模板（视图）、数据（模型）和行为（控制器）分离开来，使得代码更易于维护和理解。通过组件化开发，Vue鼓励将UI组件、数据处理逻辑和交互行为分离，以提高代码的可复用性、可维护性和可测试性。这种关注度分离原则有助于开发人员更好地管理和组织复杂的前端应用程序。</p><p>系统中的一个部分发生了变化，不会影响其他部分。<br>即使需要改变，也能够清晰地识别出那些部分需要改变。<br>如果需要扩展架构，将影响最小化，已经可以工作的每个部分都将继续工作。<br><strong>渐进式框架：</strong> <p style="color: red;font-weight: bold;">大概意思就是你可以只用我的一部分,而不是用了我这一点就必须用我的所有部分。</p></p><p>Vue 的核心库只关注视图层，方便与第三方库或既有项目整合。</p><p><code>HTML</code> + <code>CSS</code> + <code>JS</code> : 视图 ： 给用户看，刷新后台给的数据。</p><p>网络通信 ： <code>axios</code></p><p>页面跳转 ：<code> vue-router</code></p><p>状态管理：<code>vuex</code></p><p><code>Vue-UI</code> : <code>ICE</code> ,<code> Element UI</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客介绍</title>
      <link href="/2024/02/03/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D/"/>
      <url>/2024/02/03/%E5%8D%9A%E5%AE%A2%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<hr><p>​</p><p>从我搭建这个网站博客,大概花费了一个星期左右,期间在好朋友的帮助下,解决了我对这个github+hexo框架搭建博客的一些曲解,这个博客的主题使用的是一款叫<code>butterfly</code>的主题,给我的感觉是比较适合用来记录自己的学习心得,它有不错的时间轴和分类的功能,后续我会把首页导航栏搜索的功能加入.</p><p>这是butterfly的官网</p><blockquote><p><a href="https://butterfly.js.org/link/">示例 | Butterfly</a></p></blockquote><p>目前本人是一名大二的在校学生,主要学习的是<code>java</code>这一个方面,由于下半年要进行比赛,后续会进行前端vue等技术的一个系统的学习,更新到我的学习笔记.近段时间在接触C语言,大差不差的刚好把基础的编译环境搭配好,使用的是<code>vscode</code>轻量级编译器+<code>mingw64</code>给我的感觉刚开始,在网上学习搭建环境的时候比较云里雾里,博主讲的五花八门,这里觉需要我们有一个整体的大局观,才不会出现一些小的问题,拖慢我们的学习进程</p>]]></content>
      
      
      
        <tags>
            
            <tag> 我的博客介绍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue Soc的详解</title>
      <link href="/2024/02/03/%E6%B5%8B%E8%AF%95%E7%9B%AE%E5%BD%95%E6%96%87%E6%A1%A3/test1/"/>
      <url>/2024/02/03/%E6%B5%8B%E8%AF%95%E7%9B%AE%E5%BD%95%E6%96%87%E6%A1%A3/test1/</url>
      
        <content type="html"><![CDATA[<h1 id="1-为什么要提SOC这种宏大概念？"><a href="#1-为什么要提SOC这种宏大概念？" class="headerlink" title="1,为什么要提SOC这种宏大概念？"></a>1,为什么要提SOC这种宏大概念？</h1><p>都被袁隆平教授喂得太饱么， 并不是…</p><p>有些容易被忽视和错过的简单规则、代码框架介绍中，一言带过的知识，对我们来说却是极其珍贵，我们团队做的底层PAAS架构，所需的视角和需求都极为宏大。</p><p>面试中，我会提到IOC的问题， 这个问题是，控制反转，谁反了？ 谁是控制一方？ 谁是被控一方，现实生活中，有相关的案例吗？ —— 最后一问，很多经验丰富的人，都回答得不好。</p><p>—— 我们谈的原则， 谈的理论，只有计算机领域里面用到了？ 你确定学科之间，顶层的设计逻辑会如此肤浅吗？ 不会， 要做好一个大平台， 就要深入消化通用理论。</p><p>SOC跟我们目前至少是相关的， 我们的前端VUE框架开篇，就讲到了VUE的特性， 开篇介绍，就提到了SOC和渐进式架构。 渐进式我们下回再提，先谈谈SOC.</p><p>武侠书(IT公司都喜欢谈武侠，比如阿里巴巴)里面有很多场景， 就是初入江湖的小生，拿着祖传的心法秘诀， 背得滚瓜烂熟，但常常被现实的王八拳打得落花流水，武功再高，也怕飞一般的菜单，因为【天下武功，唯快不破】， SOC并没有写到23中设计模式， 但其造诣是非常深刻的。</p><ol><li><h2 id="强调架构设计，要错落有致的分离变化点。"><a href="#强调架构设计，要错落有致的分离变化点。" class="headerlink" title="强调架构设计，要错落有致的分离变化点。"></a>强调架构设计，要错落有致的分离变化点。</h2><p>所有的设计， 最终就是要应对变化，什么变化？ 不同客户的变化， 客户今非昔比的变化，真实场景和办公室设计的变化。—— 不断的被现实抽打，不断的被自己的偏狭打脸。—— 这一点，在我们公司体现的淋漓尽致。 其他公司，单个项目，我想，一定没有如此深刻。痛苦且真实的发生着， 痛并快乐着，你在人生刚刚开始的阶段， 了解到这些复杂， 会呈现给你更加成熟的人生。</p></li><li><h2 id="去污染原则，-系统中一个部分发生了变化，不会影响到其他的变化。"><a href="#去污染原则，-系统中一个部分发生了变化，不会影响到其他的变化。" class="headerlink" title="去污染原则， 系统中一个部分发生了变化，不会影响到其他的变化。"></a>去污染原则， 系统中一个部分发生了变化，不会影响到其他的变化。</h2><p> jinglintu的变化，没有影响到kadingche，为什么？ 一个跟卡丁车完全类似的项目， 我们怎么代价最小的搞定他？ 比如zhiwei、jiheng他们之间是派生关系，派生关系，如何稳妥的去污染？</p></li></ol><p>看看VUE是怎么做到SOC的:</p><p>【后面补充:】</p><p><strong>具体说明（概念比较难理解）</strong></p><ol><li><h3 id="好的架构设计必须把变化点错落有致地封装到软件系统的不同部分。要做到这一点，必须进行关注点分离。"><a href="#好的架构设计必须把变化点错落有致地封装到软件系统的不同部分。要做到这一点，必须进行关注点分离。" class="headerlink" title="好的架构设计必须把变化点错落有致地封装到软件系统的不同部分。要做到这一点，必须进行关注点分离。"></a>好的架构设计必须把变化点<strong>错落有致</strong>地封装到软件系统的不同部分。要做到这一点，必须进行关注点分离。</h3></li><li><h3 id="好的架构必须使每个关注点相互分离，也就是说系统中的一个部分发生了变化，不会影响其他部分。"><a href="#好的架构必须使每个关注点相互分离，也就是说系统中的一个部分发生了变化，不会影响其他部分。" class="headerlink" title="好的架构必须使每个关注点相互分离，也就是说系统中的一个部分发生了变化，不会影响其他部分。"></a>好的架构必须使每个关注点相互分离，也就是说系统中的一个部分发生了变化，不会影响其他部分。</h3></li><li><h3 id="即使需要改变，也能够清晰地识别出那些部分需要改变。"><a href="#即使需要改变，也能够清晰地识别出那些部分需要改变。" class="headerlink" title="即使需要改变，也能够清晰地识别出那些部分需要改变。"></a>即使需要改变，也能够清晰地识别出那些部分需要改变。</h3></li><li><h3 id="如果需要扩展架构，影响将会最小化，已经可以工作的每个部分都将继续工作。"><a href="#如果需要扩展架构，影响将会最小化，已经可以工作的每个部分都将继续工作。" class="headerlink" title="如果需要扩展架构，影响将会最小化，已经可以工作的每个部分都将继续工作。"></a>如果需要扩展架构，影响将会最小化，已经可以工作的每个部分都将继续工作。</h3></li></ol><p><strong>上述论述中的四句话总结：</strong></p><ul><li><strong>“系统中的一个部分发生了变化，不会影响其他部分。”</strong></li><li><strong>“即使需要改变，也能够清晰地识别出那些部分需要改变。”</strong></li><li><strong>“如果需要扩展架构，将影响最小化，已经可以工作的每个部分都将继续工作。”</strong></li></ul><p>这里讲的是什么呢？ 要把一件事件做好，就要有你自己的专注点。</p><p>每一部分会有各自的关注焦点。模组化程度，也就是区分关注焦点，</p><p>1974年，<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E8%89%BE%E5%85%B9%E8%B5%AB%E5%B0%94%C2%B7%E6%88%B4%E5%85%8B%E6%96%AF%E7%89%B9%E6%8B%89">艾兹赫尔·戴克斯特拉</a>在他的文章《On the role of scientific thought》中提出:</p><p>让我告诉你，对我来说所有聪明的思考的共通特性是什么。一个人要有系统地深入研究一门课题；必须将这们课题独立出来，记住在任何时候都只能关注其中一个方面。 比如说，我们知道一个程式必须是正确的，因此我们可以只抓这个点来研究；我们同时也清楚它应当是高效率的，我们可以改天来研究它的效率，等等。我们也可以问自己，程式是否是可取的（desirable）？如果是，为什么？相反的，同时应对好几个个方面不会得到任何结果！这就是我有时提到的“the separation of concerns（关注点分离）”。这个技巧就算不是完美可行的，也仍是我知道有效地组织思维的唯一可用技巧。这是就是我说的“将一个人的注意力集中在几个方面上”。这并不是说忽略其他方面，只是表明从这个方面来看，其他方面并无关紧要这一事实。这即是同时拥有单任务和多任务思维。</p><p>15年之后，这个概念已经被人们所接受。1989年，Chris Reade写的《Elements of Functional Programming》有这样的描述[<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E5%85%B3%E6%B3%A8%E7%82%B9%E5%88%86%E7%A6%BB%23cite_note-6">6]</a>：</p><p>一个程式在执行的时候一定会同时做以下几件事情：</p><ol><li><h3 id="描述所要解决的问题"><a href="#描述所要解决的问题" class="headerlink" title="描述所要解决的问题"></a>描述所要解决的问题</h3></li><li><h3 id="按照计算的顺序分成几个部分执行"><a href="#按照计算的顺序分成几个部分执行" class="headerlink" title="按照计算的顺序分成几个部分执行"></a>按照计算的顺序分成几个部分执行</h3></li><li><h3 id="同时处理内存管理"><a href="#同时处理内存管理" class="headerlink" title="同时处理内存管理"></a>同时处理内存管理</h3></li></ol><p>参考文献:</p><p>【1】<a href="https://link.zhihu.com/?target=https://zh.wikipedia.org/wiki/%E5%85%B3%E6%B3%A8%E7%82%B9%E5%88%86%E7%A6%BB">WIKI关注点分离</a></p><p>【2】<a href="https://link.zhihu.com/?target=https://www.cnblogs.com/wenhongyu/p/7992028.html">理论篇：关注点分离(Separation of concerns, SoC)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown写法01</title>
      <link href="/2024/02/01/markdown%E5%86%99%E6%B3%95/"/>
      <url>/2024/02/01/markdown%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="标题一"><a href="#标题一" class="headerlink" title="标题一"></a>标题一</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">Test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">S</span> <span class="operator">=</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$$<br>1-2&#x3D;3<br>$$</p><blockquote><p>这是一段引用</p></blockquote><p><a href="http://www.baidu.com/" title="一个搜索引擎">百度</a></p><p><u>URL:</u></p><p><a href="http://www.baidu.com/">http://www.baidu.com</a></p><p><img src="https://www.baidu.com/img/bd_logo1.png?where=super%22%E7%99%BE%E5%BA%A6%E6%90%9C%E7%B4%A2%22" alt="百度"></p><p><em>斜体</em></p><p><strong>加粗</strong></p><p><code>public</code></p><p><u>下划线</u></p><p>:smile_cat:</p><p>行内数学公式</p><p>$\theta&#x3D;x^2$</p><p>H<del>2</del>O</p><p>X^2^</p><p>&#x3D;&#x3D;高亮文字&#x3D;&#x3D;</p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My New Post</title>
      <link href="/2024/01/25/My-New-Post/"/>
      <url>/2024/01/25/My-New-Post/</url>
      
        <content type="html"><![CDATA[<p>zheshiyizhangceshitupain</p><p><img src="/./../img/%E6%9E%AF%E6%9C%A8%E9%80%A2%E6%98%A5%E6%A8%A1%E6%9D%BF.png" alt="枯木逢春模板"></p><video src="./../video/1.mp4"/>]]></content>
      
      
      
        <tags>
            
            <tag> images </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>StockMaster</title>
      <link href="/2024/01/25/StockMaster/"/>
      <url>/2024/01/25/StockMaster/</url>
      
        <content type="html"><![CDATA[<p>zheshiyizhangceshitupain</p><p><img src="/./../img/logosm2.png" alt="枯木逢春模板"></p><p><img src="/./../img/logo/qq.png" alt="qq链接"></p><p><img src="/./../img/background/bg_2.jpg" alt="qq链接"></p>]]></content>
      
      
      
        <tags>
            
            <tag> images </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/01/24/hello-world/"/>
      <url>/2024/01/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html![image-20240125190141436](C:/Users/86195/AppData/Roaming/Typora/typora-user-images/image-20240125190141436.png">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hello </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
